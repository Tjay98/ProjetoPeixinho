services:
    _defaults:
        autowire: true

    _instanceof:
        Symfony\Component\DependencyInjection\Tests\Compiler\IntegrationTestStubParent:
            # should override _defaults
            autowire: false
            shared: false
            tags:
                - { name: foo_tag, tag_option: from_instanceof }
            calls:
                - [setSunshine, [bright]]

        # a second instanceof that will be applied
        Symfony\Component\DependencyInjection\Tests\Compiler\IntegrationTestStub:
            tags:
                - { name: bar_tag }

    service_simple:
        class: Symfony\Component\DependencyInjection\Tests\Compiler\IntegrationTestStub
        tags:
            - { name: foo_tag, tag_option: from_service }
        # calls from instanceof are kept, but this comes later
        calls:
            - [enableSummer, [true]]
            - [setSunshine, [warm]]

    service_override_instanceof:
        class: Symfony\Component\DependencyInjection\Tests\Compiler\IntegrationTestStub
        # override instanceof
        autowire: true

    parent_service:
        abstract: true
        lazy: true

    # instanceof will not be applied to this
    child_service:
        class: Symfony\Component\DependencyInjection\Tests\Compiler\IntegrationTestStub
        parent: parent_service

    parent_service_with_class:
        abstract: true
        class: Symfony\Component\DependencyInjection\Tests\Compiler\IntegrationTestStub
        tags:
            - { name: foo_tag, tag_option: from_parent_def }

    child_service_with_parent_instanceof:
        parent: parent_service_with_class
        shared: true
        inherit_tags: true
        tags:
            - { name: foo_tag, tag_option: from_child_def }
